{"version":3,"sources":["start/BackgroundEarth.js","game/GameOn.js","App.js","reportWebVitals.js","index.js"],"names":["BackgroundEarth","className","id","React","Component","GameOn","props","state","data","allGames","home","inGame","gamePlaying","qN","numberOfCorrectAnswers","correctAnswer","correctTitle","possibleAnswers","correctFlagURL","goodAnswer","game","this","setState","nextQuestion","Math","floor","random","length","buildingQuizz","question","answer","rightAnswerIdx","generateI","test","includes","push","sort","wrongAnswer","correctResponse","Audio","play","map","el","onClick","playing","startQuestion","alt","src","i","evaluate","style","width","App","error","isLoaded","fetch","then","res","json","result","row","population","round","toLocaleString","capital","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d57283b.chunk.js","sourcesContent":["import React from \"react\"\n\nclass BackgroundEarth extends React.Component {\n\n  render() {\n    return <>\n      <div className=\"container\">\n        <div id=\"earth\"></div>\n      </div>\n    </>\n  }\n}\n\nexport default BackgroundEarth\n","import React from \"react\"\nimport BackgroundEarth from '../start/BackgroundEarth'\n\nclass GameOn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: this.props.props.data,\n      allGames: this.props.props.allGames,\n      home: true,\n      inGame: false,\n      gamePlaying: null,\n      qN: 0,\n      numberOfCorrectAnswers: 0,\n      correctAnswer: \"\",\n      correctTitle: \"\",\n      possibleAnswers: [],\n      correctFlagURL: null,\n      goodAnswer: true\n    }\n  }\n\n  playing(game) {\n    this.setState({ gamePlaying: game }, this.nextQuestion)\n    this.setState({ home: false, inGame: true })\n  }\n\n  generateI() {\n    return Math.floor(Math.random() * this.state.data.length)\n  }\n\n  nextQuestion() {\n    const { qN, gamePlaying, allGames } = this.state\n    this.setState({ qN: qN + 1 })\n    switch (gamePlaying) {\n      case allGames[0].game:\n        this.buildingQuizz(\"name\", \"capital\")\n        break;\n      case allGames[1].game:\n        this.buildingQuizz(\"flag\", \"name\")\n        break;\n      case allGames[2].game:\n        this.buildingQuizz(\"name\", \"population\")\n        break;\n      default:\n    }\n  }\n\n  buildingQuizz(question, answer) {\n    const { data } = this.state\n    let rightAnswerIdx = this.generateI()\n    let possibleAnswers = [data[rightAnswerIdx][answer]]\n    while (possibleAnswers.length < 4) {\n      let test = this.generateI()\n      if (!possibleAnswers.includes(data[test][answer])) possibleAnswers.push(data[test][answer]);\n    }\n    possibleAnswers.sort()\n    this.setState({\n      correctAnswer: data[rightAnswerIdx][answer],\n      correctTitle: data[rightAnswerIdx][question],\n      possibleAnswers: possibleAnswers\n    })\n  }\n\n  evaluate(answer) {\n    const { qN, correctAnswer, correctTitle, gamePlaying } = this.state\n    answer === this.state.correctAnswer ? this.correctAnswer() : this.wrongAnswer()\n    gamePlaying === \"Flags\" ?\n      this.setState({\n        correctResponse: `PREVIOUS QUESTION : ${correctAnswer}`,\n        correctFlagURL: correctTitle\n      })\n    : this.setState({ correctResponse: `PREVIOUS QUESTION : ${correctTitle} => ${correctAnswer}` })\n\n    !(qN % 10) && qN !== 0 ? this.setState({ inGame: false }) : this.nextQuestion()\n  }\n\n  correctAnswer() {\n    this.setState({ numberOfCorrectAnswers: this.state.numberOfCorrectAnswers + 1, goodAnswer: true })\n    new Audio(\"https://www.raphburk.com/wp-content/uploads/2020/03/message.wav\").play()\n  }\n\n  wrongAnswer() {\n    this.setState({ goodAnswer: false })\n    new Audio(\"https://www.raphburk.com/wp-content/uploads/2020/03/thunder.wav\").play()\n  }\n\n  render() {\n    const { qN, home, inGame, allGames, gamePlaying, correctTitle, goodAnswer, correctResponse,\n      possibleAnswers, numberOfCorrectAnswers, correctFlagURL } = this.state\n    if (home) {\n      return (\n        <>\n          <BackgroundEarth />\n          <div className=\"container inner\">\n            <h1>WELCOME <br />TO THE ULTIMATE<br />GEOGRAPHY QUIZ</h1>\n            <h2>What quiz would you like to play?</h2>\n            {allGames.map(el => <button key={el.game} onClick={() => this.playing(el.game)}>{el.game}</button>)}\n          </div>\n        </>\n      )\n    } else if (inGame) {\n      return (\n        <div className=\"container inner\">\n          <h1>{gamePlaying}: Question {qN}</h1>\n          <h2>\n            {gamePlaying === allGames[0].game && <>{allGames[0].startQuestion}<b> {correctTitle}?</b></>}\n            {gamePlaying === allGames[1].game && <>{allGames[1].startQuestion}</>}\n            {gamePlaying === allGames[2].game && <>{allGames[2].startQuestion}<b> {correctTitle}?</b><br />Rounded in Millions</>}\n          </h2>\n          { gamePlaying === allGames[1].game && <img alt=\"Quizz flag\" src={correctTitle}></img>}\n          <div id=\"buttons\">{possibleAnswers.map((el, i) => <button key={el} onClick={() => this.evaluate(el, i)}>{el}</button>)}</div>\n          {(qN - 1) % 10 !== 0 &&\n            <>\n              <div className={goodAnswer ? \"correct\" : \"wrong\"}>{correctResponse}</div>\n              {gamePlaying === allGames[1].game && <><img alt=\"Quizz flag\" style={{ width: \"80px\" }} src={correctFlagURL}></img></>}\n              <div>Your score is {numberOfCorrectAnswers}/{qN - 1}</div>\n            </>}\n        </div>\n      )\n    } else if (!inGame) {\n      new Audio(\"https://www.raphburk.com/wp-content/uploads/2020/03/checkpoint.wav\").play()\n      return (\n        <div className=\"container inner\">\n          <h1>Bravo!<br />\n          You finished the test!\n        </h1>\n          <h2>Your Score is <b>{numberOfCorrectAnswers}/{qN}</b></h2>\n          <h3>Are you ready for 10 more questions?</h3>\n          <div id=\"buttons\">\n            {allGames.map(el => <button key={el.game} onClick={() => this.playing(el.game)}>{el.game}</button>)}\n          </div>\n          <div className={goodAnswer ? \"correct\" : \"wrong\"}>{correctResponse}</div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default GameOn\n","import React from \"react\"\nimport './App.css'\nimport BackgroundEarth from './start/BackgroundEarth'\nimport GameOn from './game/GameOn'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      allGames: [\n        {\n          game: \"Capitals\",\n          startQuestion: \"What is the capital of\",\n        },\n        {\n          game: \"Flags\",\n          startQuestion: \"What country does this flag belongs to?\",\n        },\n        {\n          game: \"Population\",\n          startQuestion: \"What is the population of\",\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://restcountries.eu/rest/v2/all?fields=name;capital;population;flag\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          result.map(row => {\n            row.population = Math.round(row.population / 1000000).toLocaleString('en')\n            if (row.capital === \"\") row.capital = \"N/A\"\n            return \"\"\n          })\n          this.setState({ isLoaded: true, data: result })\n        },\n        (error) => this.setState({ isLoaded: true, error: error })\n      )\n  }\n\n  render() {\n    const {error, isLoaded} = this.state\n    if (!isLoaded) {\n      return (\n        <div className=\"App\">\n          <BackgroundEarth />\n          <div className=\"container inner\">\n            <h1>Loading...</h1>\n          </div>\n        </div>\n      )\n    } else if (isLoaded) {\n      if (error) {\n        return (\n          <div className=\"App\">\n            <BackgroundEarth />\n            <div className=\"container inner\">\n              <h1>Oups... Something went wrong, <br /><br />try to refresh <br />or <br />try again later.</h1>\n              <p>More info about the error: {error}</p>\n            </div>\n          </div>\n        )\n      } else {\n        return (\n          <div className=\"App\">\n            <GameOn props={this.state}/>\n          </div>\n        )\n      }\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}